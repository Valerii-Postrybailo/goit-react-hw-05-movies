{"version":3,"file":"static/js/881.924ee6a3.chunk.js","mappings":"8MAGe,SAASA,EAAT,GAAuC,IAAdC,EAAa,EAAbA,MAAOC,EAAM,EAANA,GAG7C,GAAyCC,EAAAA,EAAAA,MAAzC,eAAOC,EAAP,UAEA,OACE,yBACE,SAAC,KAAD,CACEC,GAAE,0CAAqCH,GACvCI,MAAO,CACLC,UAAUC,EAAAA,EAAAA,MAAcC,SACxBC,OAAQN,EAAaO,IAAI,UAJ7B,SAOGV,KAIR,CClBc,SAASW,EAAT,GAAiC,IAAXC,EAAU,EAAVA,OAEnC,OACE,+BACE,wBACGA,EAAOC,KAAI,gBAAGZ,EAAH,EAAGA,GAAID,EAAP,EAAOA,MAAP,OACV,SAACD,EAAD,CAAwBC,MAAOA,EAAOC,GAAIA,GAAtBA,EADV,OAMnB,C,oHCbD,EAAuB,qB,SCKR,SAASa,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACA,GAAwCjB,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBiB,EAArB,KACMX,EAASN,EAAaO,IAAI,SAMhC,SAASW,EAAcZ,GACrB,IACmBa,EAAAA,EAAAA,mBAAgCb,GACtCc,MAAK,SAAAC,GAEZL,EAAgBK,EAAKA,KAAKC,QAC3B,GACe,CAAhB,MAAOC,GAAS,CACnB,EAZHC,EAAAA,EAAAA,YAAU,WACRlB,GAAUY,EAAcZ,EACzB,GAAE,CAACA,IAsBJ,OACE,6BACE,kBAAMmB,UAAWC,EAAQC,SAXR,SAAAC,GACnBA,EAAEC,iBACFZ,EAAgB,CAACJ,MAAMA,GACxB,EAQG,WACE,kBAAOiB,SAPQ,SAAAF,GACnBd,EAASc,EAAEG,OAAOC,MACnB,EAKoCA,MAAOnB,KACtC,mBAAQoB,QAAS,kBAAMf,EAAcL,EAApB,EAAjB,uBAEuB,IAAxBE,EAAamB,SAAgB,SAAC1B,EAAA,EAAD,CAAYC,OAAQM,MAGvD,C","sources":["components/MovieListItem/MovieListItem.jsx","components/MoviesList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["import { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function MovieListItem({ title, id }) {\n  // console.log(id)\n  // eslint-disable-next-line no-unused-vars\n  const [searchParams, _setSearchParams] = useSearchParams();\n\n  return (\n    <li>\n      <Link\n        to={`/goit-react-hw-05-movies/movies/${id}`}\n        state={{\n          location: useLocation().pathname,\n          search: searchParams.get('query'),\n        }}\n      >\n        {title}\n      </Link>\n    </li>\n  );\n}\n\nMovieListItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};","import MovieListItem from '../MovieListItem/MovieListItem';\nimport PropTypes from 'prop-types';\n\nexport default function MoviesList({ movies }) {\n  // console.log(movies)\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, title }) => (\n          <MovieListItem key={id} title={title} id={id} />\n        ))}\n      </ul>\n    </>\n  );\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__4ow+Z\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport apiResources from 'services/themoviedb.org_API';\nimport s from './Movies.module.css';\n\nexport default function MoviesPage() {\n  const [query, setQuery] = useState('');\n  const [moviesSearch, setMoviesSearch] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('query');\n\n  useEffect(() => {\n    search && onClickSearch(search);\n  }, [search]);\n\n  function onClickSearch(search) {\n    try {\n      const response = apiResources.fetchMoviesByQuery(search);\n        response.then(data => {\n          // console.log(data)\n          setMoviesSearch(data.data.results)\n        });\n      } catch (error) {}\n    }\n  \n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({query:query})\n  };\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <main>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <input onChange={handleChange} value={query} />\n        <button onClick={() => onClickSearch(query)}>Search</button>\n      </form>\n      {moviesSearch.length !== 0 && <MoviesList movies={moviesSearch} />}\n    </main>\n  );\n}"],"names":["MovieListItem","title","id","useSearchParams","searchParams","to","state","location","useLocation","pathname","search","get","MoviesList","movies","map","MoviesPage","useState","query","setQuery","moviesSearch","setMoviesSearch","setSearchParams","onClickSearch","apiResources","then","data","results","error","useEffect","className","s","onSubmit","e","preventDefault","onChange","target","value","onClick","length"],"sourceRoot":""}