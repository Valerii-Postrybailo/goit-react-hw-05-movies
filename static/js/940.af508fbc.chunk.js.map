{"version":3,"file":"static/js/940.af508fbc.chunk.js","mappings":"oOACA,EAAuB,oC,SCER,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAGR,OACE,iCACE,eAAIE,UAAWC,EAAf,SAJe,CAAC,OAAQ,WAKVC,KAAI,SAACC,EAAMC,GACrB,OACE,yBACE,SAAC,KAAD,CACEC,GAAE,0CAAqCP,EAArC,YAAgDK,EAAKG,eADzD,SAGGH,KAJIC,EAQZ,OAEH,SAAC,KAAD,MAGL,CCxBD,MAAuB,+BAAvB,EAA4D,8BAA5D,EAAiG,+BAAjG,EAAuI,+BCMxH,SAASG,IACtB,OAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQZ,GAAYC,EAAAA,EAAAA,MAAZD,QAEFa,GAAcC,EAAAA,EAAAA,SAAOC,EAAAA,EAAAA,MAAcC,OA0BzC,IAxBAC,EAAAA,EAAAA,YAAU,WACR,IACmBC,EAAAA,EAAAA,gBAA6BlB,GACrCmB,MAAK,SAAAC,GACZ,MAOIA,EAAKA,KANPC,EADF,EACEA,MACAC,EAFF,EAEEA,SACAC,EAHF,EAGEA,YACAC,EAJF,EAIEA,aACAC,EALF,EAKEA,OACAC,EANF,EAMEA,aAEFd,EAAgB,CACdS,MAAAA,EACAC,SAAAA,EACAC,YAAAA,EACAC,aAAAA,EACAC,OAAAA,EACAC,aAAAA,GAEH,GACe,CAAhB,MAAOC,GAAS,CACnB,GAAE,CAAC3B,IAEAW,EAAc,CAChB,IAAQU,EACNV,EADMU,MAAOC,EACbX,EADaW,SAAUC,EACvBZ,EADuBY,YAAaC,EACpCb,EADoCa,aAAcC,EAClDd,EADkDc,OAAQC,EAC1Df,EAD0De,aAG5D,OACE,gCACGb,EAAYe,UACX,SAAC,KAAD,CACE1B,UAAWC,EACXI,GAAIM,EAAYe,QAAQC,SACxBb,MAAOH,EAAYe,QAAQE,OAH7B,6BAQF,iBAAK5B,UAAWC,EAAhB,WACE,gBACE4B,IAAG,yCAAoCR,GACvCrB,UAAWC,EACX6B,IAAKX,KAEP,iBAAKnB,UAAWC,EAAhB,WACE,kCAAQkB,EAAR,aAAkBK,EAAaO,MAAM,EAAG,GAAxC,QACA,6CAAkC,GAAfT,EAAnB,QACA,sCACA,uBAAIF,KACJ,oCACA,uBAAIG,EAAOrB,KAAI,gBAAG8B,EAAH,EAAGA,KAAH,gBAAiBA,EAAjB,iBAGnB,mDACA,SAACnC,EAAD,MAGL,CACF,C","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDetails/AdditionalInformation.module.css?8e46","components/MovieDetails/AdditionalInformation.jsx","webpack://goit-react-hw-05-movies/./src/pages/MovieDetailsPage/MovieDetailsPage.module.css?9108","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"AdditionalInformation_list__Y0JDN\"};","import { useParams, Link, Outlet } from 'react-router-dom';\nimport s from './AdditionalInformation.module.css';\n\nexport default function AdditionalInformation() {\n  const { movieId } = useParams();\n  const NAVIGATION = ['Cast', 'Reviews'];\n\n  return (\n    <>\n      <ul className={s.list}>\n        {NAVIGATION.map((page, index) => {\n          return (\n            <li key={index}>\n              <Link\n                to={`/goit-react-hw-05-movies/movies/${movieId}/${page.toLowerCase()}`}\n              >\n                {page}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n      <Outlet />\n    </>\n  );\n}","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"MovieDetailsPage_link__rhdjc\",\"img\":\"MovieDetailsPage_img__+Nbrw\",\"info\":\"MovieDetailsPage_info__wQ8PP\",\"text\":\"MovieDetailsPage_text__vp0Sm\"};","import { useState, useRef } from 'react';\nimport apiResources from 'services/themoviedb.org_API';\nimport AdditionalInformation from 'components/MovieDetails/AdditionalInformation';\nimport { Link, useParams, useLocation } from 'react-router-dom';\nimport s from './MovieDetailsPage.module.css';\nimport { useEffect } from 'react';\n\nexport default function MovieDetailsPage() {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { movieId } = useParams();\n\n  const locationRef = useRef(useLocation().state);\n\n  useEffect(() => {\n    try {\n      const response = apiResources.fetchMoviesById(movieId);\n      response.then(data => {\n        const {\n          title,\n          overview,\n          poster_path,\n          vote_average,\n          genres,\n          release_date,\n        } = data.data;\n        setMovieDetails({\n          title,\n          overview,\n          poster_path,\n          vote_average,\n          genres,\n          release_date,\n        });\n      });\n    } catch (error) {}\n  }, [movieId]);\n\n  if (movieDetails) {\n    const { title, overview, poster_path, vote_average, genres, release_date } =\n      movieDetails;\n\n    return (\n      <>\n        {locationRef.current && (\n          <Link\n            className={s.link}\n            to={locationRef.current.location}\n            state={locationRef.current.search}\n          >\n            &#8592; Go back\n          </Link>\n        )}\n        <div className={s.info}>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n            className={s.img}\n            alt={title}\n          />\n          <div className={s.text}>\n            <h2>{`${title} (${release_date.slice(0, 4)})`}</h2>\n            <p>{`User score: ${vote_average * 10}%`}</p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <p>{genres.map(({ name }) => `${name} `)}</p>\n          </div>\n        </div>\n        <p>Additional information</p>\n        <AdditionalInformation />\n      </>\n    );\n  }\n}"],"names":["AdditionalInformation","movieId","useParams","className","s","map","page","index","to","toLowerCase","MovieDetailsPage","useState","movieDetails","setMovieDetails","locationRef","useRef","useLocation","state","useEffect","apiResources","then","data","title","overview","poster_path","vote_average","genres","release_date","error","current","location","search","src","alt","slice","name"],"sourceRoot":""}